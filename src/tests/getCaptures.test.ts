import { getCaptures } from "../utils/getCaptures";

describe('GameLogic', () => {
    test('Проверка #1', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 2],
            [0, 0, 2, 0, 2, 0, 2, 0],
            [0, 2, 0, 2, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 2, 0, 0, 0, 0],
            [1, 0, 0, 0, 1, 0, 1, 0],
            [0, 1, 0, 1, 0, 0, 0, 1],
            [1, 0, 1, 0, 1, 0, 1, 0]
        ];

        const result = getCaptures(board, [5, 4]);
        expect(result).toStrictEqual([[3, 2], [1, 0]]);
    });

    test('Проверка #2', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 2],
            [0, 0, 2, 0, 0, 0, 2, 0],
            [0, 2, 0, 2, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 2, 0, 0, 0, 0],
            [1, 0, 0, 0, 1, 0, 1, 0],
            [0, 1, 0, 1, 0, 0, 0, 1],
            [1, 0, 1, 0, 1, 0, 1, 0]
        ];

        const result = getCaptures(board, [5, 4]);
        expect(result).toStrictEqual([[3, 2]]);
    });

    test('Проверка #3', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 2],  
            [2, 0, 2, 0, 2, 0, 0, 0],
            [0, 9, 0, 0, 0, 2, 0, 2],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 4],
            [0, 0, 2, 0, 1, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 1],
            [0, 0, 0, 0, 1, 0, 0, 0]
        ];

        const result = getCaptures(board, [4, 7]);
        expect(result).toStrictEqual([[6, 5], [4, 3]]);
    });

    test('Проверка #4', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 0],
            [2, 0, 2, 0, 2, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 1, 0],
            [0, 0, 0, 2, 0, 0, 0, 0],
            [1, 0, 0, 0, 0, 0, 1, 0],
            [0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 4, 0, 0, 0]
        ];

        const result = getCaptures(board, [7, 4]);
        expect(result).toStrictEqual([[4, 7], [2, 5]]);
    });

    test('Проверка глаз бога смерти #1', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 0],
            [2, 0, 2, 0, 2, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 4],
            [1, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ];

        const result = getCaptures(board, [4, 7]);
        expect(result).toStrictEqual([[2, 5], [7, 0]]);
    });

    test('Проверка глаз бога смерти #2', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 0],
            [2, 0, 2, 0, 2, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 1, 0],
            [0, 0, 0, 2, 0, 0, 0, 4],
            [1, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ];

        const result = getCaptures(board, [4, 7]);
        expect(result).toStrictEqual([[2, 5]]);
    });

    test('Проверка глаз бога смерти #3', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 0],
            [2, 0, 2, 0, 2, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 4],
            [1, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0],
            [2, 0, 0, 0, 0, 0, 0, 0]
        ];

        const result = getCaptures(board, [4, 7]);
        expect(result).toStrictEqual([[2, 5]]);
    });

    test('Проверка глаз бога смерти #4', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 0],
            [2, 0, 2, 0, 2, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 4],
            [1, 0, 1, 0, 0, 0, 0, 0],
            [0, 2, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ];

        const result = getCaptures(board, [4, 7]);
        expect(result).toStrictEqual([[2, 5]]);
    });

    test('Проверка глаз бога смерти #5', () => {
        const board = [
            [0, 2, 0, 2, 0, 2, 0, 0],
            [2, 0, 2, 0, 2, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 1, 0],
            [0, 0, 0, 1, 0, 0, 0, 4],
            [1, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ];

        const result = getCaptures(board, [4, 7]);
        expect(result).toStrictEqual([[2, 5], [5, 2], [7, 0]]);
    });
});
